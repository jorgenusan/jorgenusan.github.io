---
// @ts-nocheck
import { getLangFromUrl, useTranslations } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<div class="flex flex-col">
    <h1 class="titles">{t(`${Astro.props.type}.title`)}</h1>
    <br />
    <div class="flex flex-wrap justify-center gap-10">
        {Astro.props.items.map((item, index) => (
            <div id={t(`${Astro.props.type}.${item}.name`)} class="card w-80 shadow-custom-blue shadow-md flex mb-4 bg-custom-black transition-transform transform hover:scale-110 duration-300 ease-in-out">
                <figure>
                    <img
                        src={t(`${Astro.props.type}.${item}.img`)}
                        alt={t(`${Astro.props.type}.${item}.name`)}
                    />
                </figure>
                <div class="card-body">
                    <h2 class="card-title text-custom-blue">{t(`${Astro.props.type}.${item}.name`)}</h2>
                    <p>{t(`${Astro.props.type}.${item}.description`)}</p>
                    <a class="btn w-20 rounded-lg bg-custom-blue text-white" href={t(`${Astro.props.type}.${item}.web`)} target="_blank">GitHub</a>
                </div>
            </div>
        ))}
    </div>
</div>

<style global>
    .btn:hover {
        background-color: #45528c;
    }
</style>

<script>
    function applyTheme() {
        const theme = localStorage.getItem('theme');
        const cards = document.querySelectorAll('.card');

        cards.forEach(card => {
            card.style.backgroundColor = theme === 'light' ? '#e7e8ec' : '';
        });
    }

    const toggle = document.getElementById('themeToggle');
    toggle?.addEventListener('change', applyTheme);

    window.onload = applyTheme;
</script>